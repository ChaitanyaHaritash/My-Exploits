from lib.common import helpers
import time

class Module:

    def __init__(self, mainMenu, params=[]):

        self.info = {
            'Name': 'Invoke-HostRecon',

            'Author': ['@bofheaded' , '@dafthack'],

            'Description': ("performs internal recon on pwned victim system"),

            'Background' : False,

            'OutputExtension' : None,

            'NeedsAdmin' : False,

            'OpsecSafe' : False,

            'Language' : 'powershell',

            'MinLanguageVersion' : '2',

            'Comments': [
                ''
            ]
        }

        # any options needed by the module, settable during runtime
        self.options = {
            'Agent' : {
                'Description'   :   'Agent to run module on.',
                'Required'      :   True,
                'Value'         :   ''
            }
        }

        # save off a copy of the mainMenu object to access external functionality
        #   like listeners/agent handlers/etc.
        self.mainMenu = mainMenu

        for param in params:
            # parameter format is [Name, Value]
            option, value = param
            if option in self.options:
                self.options[option]['Value'] = value


    def generate(self):

        moduleSource = self.mainMenu.installPath + "/data/module_source/recon/Invoke-HostRecon.ps1"

        try:
            f = open(moduleSource, 'r')
        except:
            print helpers.color("[!] Could not read module source path at: " + str(moduleSource))
            return ""
        print "[*] Please Have Patience running Invoke-HostRecon on target box"
        time.sleep(1)
        script = f.read()
        f.close()
        script += "Invoke-HostRecon"
        return script